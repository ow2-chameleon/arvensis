<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<!-- Project's parent -->
	<parent>
		<groupId>org.ow2.chameleon.rose</groupId>
		<artifactId>rose-parent</artifactId>
        <version>1.2.3-SNAPSHOT</version>
	</parent>

	<!-- Description of the project -->
	<groupId>org.ow2.chameleon.rose.testing</groupId>
	<artifactId>rose-helpers</artifactId>
	<name>OW2 Chameleon - RoSe Testing Helpers</name>
	<packaging>bundle</packaging>
	<description>OW2 Chameleon ROSE Testing Helpers, contains the ROSE testing helpers.</description>

	<properties>
		<!-- Dependencies version -->

		<!-- Test dependencies version -->
		<mockito.version>1.7</mockito.version>
		<junit.version>4.8.2</junit.version>
		
		<!-- Encoding -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<!-- Project dependencies -->
	<dependencies>
		<dependency>
			<groupId>org.osgi</groupId>
			<artifactId>org.osgi.compendium</artifactId>
			<version>${osgi.version}</version>
		</dependency>
		<dependency>
			<groupId>org.osgi</groupId>
			<artifactId>org.osgi.enterprise</artifactId>
			<version>${osgi.ent.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.felix</groupId>
			<artifactId>org.apache.felix.ipojo</artifactId>
			<version>${ipojo.version}</version>
		</dependency>
        <dependency>
            <groupId>org.apache.felix</groupId>
            <artifactId>org.apache.felix.ipojo.annotations</artifactId>
            <version>${ipojo.version}</version>
        </dependency>
		<dependency>
			<groupId>org.ow2.chameleon.rose</groupId>
			<artifactId>rose-core</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.ow2.chameleon.testing</groupId>
			<artifactId>osgi-helpers</artifactId>
			<version>0.2.0</version>
		</dependency>

		<!-- Test dependencies -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<type>jar</type>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>${mockito.version}</version>
			<type>jar</type>
		</dependency>
		<!-- Pax Exam API: -->
		<dependency>
			<groupId>org.ops4j.pax.exam</groupId>
			<artifactId>pax-exam</artifactId>
			<version>1.2.4</version>
			<scope>compile</scope>
		</dependency>

		<!-- During runtime Pax Exam will discover the OSGi container to use by
			searching metadata available into classpath. Pax Exam comes with a default
			container that uses [Pax Runner] for implementing the container requirements: -->
		<dependency>
			<groupId>org.ops4j.pax.exam</groupId>
			<artifactId>pax-exam-container-default</artifactId>
			<version>1.2.4</version>
			<scope>compile</scope>

		</dependency>
		<!-- If your test code is based on JUnit you will have to have the Junit
			support artifact: -->
		<dependency>
			<groupId>org.ops4j.pax.exam</groupId>
			<artifactId>pax-exam-junit</artifactId>
			<version>1.2.4</version>
			<scope>compile</scope>
		</dependency>
	</dependencies>

	<!-- Build configuration -->
	<build>
		<plugins>
		<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<version>${bundle.plugin.version}</version>
				<extensions>true</extensions>
				<configuration>
					<instructions>
						<Bundle-SymbolicName>
							${project.artifactId}
						</Bundle-SymbolicName>
						<Export-Package>
							org.ow2.chameleon.rose.testing
						</Export-Package>
						<Private-Package />
						<Import-Package>
							!org.ops4j.pax.exam.junit,
							!org.ops4j.pax.exam.junit.options,
                            org.osgi.framework*;version="[1.3,2)",
							*
						</Import-Package>
					</instructions>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${compiler.plugin.version}</version>
				<configuration>
					<source>1.5</source>
					<target>1.5</target>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>

